#syntax=docker/dockerfile:1.2
#generated by pip_builder

FROM dorgeln/orbiter:alpine-core-0.0.21
LABEL maintainer="Andreas Trawoeger <atrawog@dorgeln.org>"

USER root
WORKDIR /root
COPY alpine.pkg alpine.pkg
RUN --mount=type=cache,id=apk-cache,target=/etc/apk/cache \
    PKG=`cat alpine.pkg` && echo "Installing ${PKG}" && apk add ${PKG}
USER jovyan
WORKDIR ${PYENV_ROOT}
RUN --mount=type=cache,id=pyenv-sources,target=/env/pyenv/sources,uid=1000,gid=100 \
pyenv install -k -s ${PYTHON_VERSION} && pyenv global ${PYTHON_VERSION}

USER jovyan
WORKDIR ${NPM_DIR}
COPY --chown=${NB_USER} package.json  ${NPM_DIR}/package.json
RUN npm install --prefix ${NPM_DIR} && npm cache clean --force
USER jovyan
WORKDIR ${PYENV_ROOT}
COPY --chown=jovyan requirements.txt requirements.txt
RUN --mount=type=cache,id=pip-cache,target=/build/cache,uid=1000,gid=100 \
    --mount=type=cache,id=pip-tmp,target=/build/tmp,uid=1000,gid=100 \
    pip install -U  pip -U setuptools -U wheel -U cython-setuptools && \
    pip install -r requirements.txt
RUN  python -m sshkernel install --sys-prefix && python -m bash_kernel.install --sys-prefix && jupyter serverextension enable --sys-prefix sshkernel && jupyter serverextension enable --sys-prefix nbgitpuller && jupyter serverextension enable --sys-prefix jupyter_server_proxy && jupyter lab clean  -y
USER jovyan
WORKDIR ${HOME}

CMD ["jupyter", "lab", "--ip", "0.0.0.0","--no-browser","--NotebookApp.token=''","--NotebookApp.password=''"]
EXPOSE 8888